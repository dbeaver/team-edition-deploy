map $http_cookie $backend_target {
    default $binary_remote_addr;  # Use client IP if cookie is not set
    ~.+ $http_cookie;       # Use the cookie value if it is set
}

upstream cloudbeaver-te-backend {
    hash $backend_target consistent;
    server cbte-cloudbeaver-te-1:8978;
    server cbte-cloudbeaver-te-2:8978;
    server cbte-cloudbeaver-te-3:8978;
}

ssl_certificate /etc/nginx/ssl/fullchain.pem;
ssl_certificate_key /etc/nginx/ssl/privkey.pem;
ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
ssl_ciphers         HIGH:!aNULL:!MD5;

proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $http_host;
proxy_read_timeout 1800s;

log_format cookie_log '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_cookie" '
                          'Cookie cb-session-id: $http_cookie';

access_log /var/log/nginx/access.log cookie_log;

server {
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name $CLOUDBEAVER_DOMAIN;
    
    client_max_body_size 500M;

    include /etc/nginx/conf.d/cloudbeaver.locations;
    
    location /api/ws {
        proxy_pass       http://cloudbeaver-te-backend;
        # Allow websocket connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location / {
        proxy_pass       http://cloudbeaver-te-backend;
    }
}