{{- if eq "https" .Values.httpScheme }}

{{- $chainCertPath := print (.Values.httpsCertPath) "/fullchain.pem" }}
{{- $keyCertPath := print (.Values.httpsCertPath) "/privkey.pem" }}

# These TLS certificate files must be provided by the user.
# The files should be manually placed in the path specified by `httpsCertPath`.
# Helm will fail if they are missing to ensure a valid HTTPS configuration.

# Validate that certificate files exist unless using AWS ALB (which uses an ARN)
{{- if and (ne .Values.ingressController "aws-alb") (or (not (.Files.Get $chainCertPath)) (not (.Files.Get $keyCertPath))) }}
  {{- fail (printf "Error: TLS is enabled (httpScheme=https), but one or both TLS files (%s, %s) are missing or empty." $chainCertPath $keyCertPath) }}
{{- end }}

{{- include "check.pem" (dict "path" $chainCertPath "content" (.Files.Get $chainCertPath)
                               "pattern" "^-----BEGIN CERTIFICATE-----[\\s\\S]+-----END CERTIFICATE-----$") }}
{{- include "check.pem" (dict "path" $keyCertPath   "content" (.Files.Get $keyCertPath)
                               "pattern" "^-----BEGIN (?:EC |RSA |)?PRIVATE KEY-----[\\s\\S]+-----END (?:EC |RSA |)?PRIVATE KEY-----$") }}
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ .Release.Name }}-ingress-tls
data:
  tls.crt: {{ .Files.Get $chainCertPath | b64enc }}
  tls.key: {{ .Files.Get $keyCertPath | b64enc }}

{{- end }}